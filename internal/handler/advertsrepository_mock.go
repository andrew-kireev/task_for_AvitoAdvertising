// Code generated by MockGen. DO NOT EDIT.
// Source: adversrepository.go

// Package mock_store is a generated GoMock package.
package handler

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	model "tast_for_AvitoAdvertising/internal/model"
)

// MockAdvertRepositoryInterface is a mock of AdvertRepositoryInterface interface
type MockAdvertRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAdvertRepositoryInterfaceMockRecorder
}

// MockAdvertRepositoryInterfaceMockRecorder is the mock recorder for MockAdvertRepositoryInterface
type MockAdvertRepositoryInterfaceMockRecorder struct {
	mock *MockAdvertRepositoryInterface
}

// NewMockAdvertRepositoryInterface creates a new mock instance
func NewMockAdvertRepositoryInterface(ctrl *gomock.Controller) *MockAdvertRepositoryInterface {
	mock := &MockAdvertRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockAdvertRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdvertRepositoryInterface) EXPECT() *MockAdvertRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateAdvert mocks base method
func (m *MockAdvertRepositoryInterface) CreateAdvert(advert *model.Advert) (*model.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdvert", advert)
	ret1, _ := ret[1].(error)
	return advert, ret1
}

// CreateAdvert indicates an expected call of CreateAdvert
func (mr *MockAdvertRepositoryInterfaceMockRecorder) CreateAdvert(advert interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdvert", reflect.TypeOf((*MockAdvertRepositoryInterface)(nil).CreateAdvert), advert)
}

// GetAdvertById mocks base method
func (m *MockAdvertRepositoryInterface) GetAdvertById(id int, optionalFields string) (*model.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvertById", id, optionalFields)
	ret0, _ := ret[0].(*model.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvertById indicates an expected call of GetAdvertById
func (mr *MockAdvertRepositoryInterfaceMockRecorder) GetAdvertById(id, optionalFields interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvertById", reflect.TypeOf((*MockAdvertRepositoryInterface)(nil).GetAdvertById), id, optionalFields)
}

// GetAllAdverts mocks base method
func (m *MockAdvertRepositoryInterface) GetAllAdverts(sort string) ([]model.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllAdverts", sort)
	ret0, _ := ret[0].([]model.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllAdverts indicates an expected call of GetAllAdverts
func (mr *MockAdvertRepositoryInterfaceMockRecorder) GetAllAdverts(sort interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllAdverts", reflect.TypeOf((*MockAdvertRepositoryInterface)(nil).GetAllAdverts), sort)
}
